<template>
  <header class="bg-white shadow-sm">
    <nav class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
      <div class="flex justify-between items-center h-20">
        <!-- Logo -->
        <div class="flex items-center -ml-4">
          <div class="flex items-center space-x-1">
            <div class="w-28 h-28 flex items-center justify-center mt-4">
              <img src="/ChatGPT_Image_15_de_set._de_2025__23_14_25-removebg-preview.png" alt="Go Brazil Logo" class="w-28 h-28 object-contain ml-4" />
            </div>
            <span class="text-2xl font-bold text-gray-900" style="font-family: 'Anton', sans-serif; letter-spacing: 0.1em;">Go Brazil</span>
          </div>
        </div>

        <!-- Navigation Links - Desktop -->
        <div class="hidden md:block">
          <div class="flex items-center space-x-6">
            <NuxtLink 
              to="/" 
              class="relative text-gray-700 hover:text-green-600 px-2 py-2 text-sm font-medium transition-colors group"
            >
              {{ t('home') }}
              <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
            </NuxtLink>
            <NuxtLink 
              to="/sobre-nos" 
              class="relative text-gray-700 hover:text-green-600 px-2 py-2 text-sm font-medium transition-colors group"
            >
              {{ t('about') }}
              <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
            </NuxtLink>
            <NuxtLink 
              to="/planos" 
              class="relative text-gray-700 hover:text-green-600 px-2 py-2 text-sm font-medium transition-colors group"
            >
              {{ t('plans') }}
              <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
            </NuxtLink>
            <NuxtLink 
              to="/guia-do-brasil" 
              class="relative text-gray-700 hover:text-green-600 px-2 py-2 text-sm font-medium transition-colors group"
            >
              {{ t('guide') }}
              <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
            </NuxtLink>
            <NuxtLink 
              to="/faq" 
              class="relative text-gray-700 hover:text-green-600 px-2 py-2 text-sm font-medium transition-colors group"
            >
              {{ t('faq') }}
              <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
            </NuxtLink>
            <NuxtLink 
              to="/contato" 
              class="relative text-gray-700 hover:text-green-600 px-2 py-2 text-sm font-medium transition-colors group"
            >
              {{ t('contact') }}
              <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
            </NuxtLink>
            <NuxtLink 
              to="/chatbot" 
              class="relative text-gray-700 hover:text-green-600 px-2 py-2 text-sm font-medium transition-colors group"
            >
              {{ t('chatbot') }}
              <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
            </NuxtLink>
          </div>
        </div>

        <!-- Right side buttons -->
        <div class="hidden md:flex items-center space-x-4">
          <!-- Language selector -->
          <div class="flex items-center space-x-1">
            <Icon name="mdi:earth" class="w-4 h-4 text-gray-500" />
            <select 
              v-model="currentLanguage" 
              @change="changeLanguage"
              class="text-sm text-gray-700 bg-transparent border-none focus:ring-0 cursor-pointer"
            >
              <option value="pt">{{ translations[currentLanguage].language }}</option>
              <option value="en">English</option>
              <option value="es">Espa√±ol</option>
            </select>
          </div>
          
          <!-- Action buttons -->
          <button @click="openLoginModal" class="text-green-600 hover:text-green-700 px-4 py-2 text-sm font-medium transition-colors">
            {{ translations[currentLanguage].login }}
          </button>
          <button @click="openRegisterModal" class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg text-sm font-medium transition-colors">
            {{ translations[currentLanguage].register }}
          </button>
        </div>

        <!-- Mobile menu button -->
        <div class="md:hidden">
          <button 
            @click="toggleMobileMenu"
            class="text-gray-700 hover:text-blue-600 p-2"
          >
            <Icon name="mdi:menu" class="w-6 h-6" />
          </button>
        </div>
      </div>

      <!-- Mobile Navigation Menu -->
      <div v-if="isMobileMenuOpen" class="md:hidden">
        <div class="px-2 pt-2 pb-3 space-y-1 sm:px-3 bg-white border-t">
          <NuxtLink 
            to="/" 
            class="relative text-gray-700 hover:text-green-600 block px-3 py-2 text-base font-medium group"
          >
            {{ translations[currentLanguage].home }}
            <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
          </NuxtLink>
          <NuxtLink 
            to="/sobre-nos" 
            class="relative text-gray-700 hover:text-green-600 block px-3 py-2 text-base font-medium group"
          >
            {{ translations[currentLanguage].about }}
            <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
          </NuxtLink>
          <NuxtLink 
            to="/planos" 
            class="relative text-gray-700 hover:text-green-600 block px-3 py-2 text-base font-medium group"
          >
            {{ translations[currentLanguage].plans }}
            <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
          </NuxtLink>
          <NuxtLink 
            to="/guia-do-brasil" 
            class="relative text-gray-700 hover:text-green-600 block px-3 py-2 text-base font-medium group"
          >
            {{ translations[currentLanguage].guide }}
            <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
          </NuxtLink>
          <NuxtLink 
            to="/faq" 
            class="relative text-gray-700 hover:text-green-600 block px-3 py-2 text-base font-medium group"
          >
            {{ translations[currentLanguage].faq }}
            <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
          </NuxtLink>
          <NuxtLink 
            to="/contato" 
            class="relative text-gray-700 hover:text-green-600 block px-3 py-2 text-base font-medium group"
          >
            {{ translations[currentLanguage].contact }}
            <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
          </NuxtLink>
          <NuxtLink 
            to="/chatbot" 
            class="relative text-gray-700 hover:text-green-600 block px-3 py-2 text-base font-medium group"
          >
            {{ translations[currentLanguage].chatbot }}
            <div class="absolute bottom-0 left-0 w-full h-0.5 bg-green-600 transform scale-x-0 origin-left transition-transform duration-300 ease-out group-hover:scale-x-100"></div>
          </NuxtLink>
          
          <!-- Mobile buttons -->
          <div class="pt-4 pb-3 border-t border-gray-200">
            <div class="flex items-center px-3 space-x-3">
              <button @click="openLoginModal" class="text-green-600 hover:text-green-700 px-4 py-2 text-sm font-medium">
                {{ translations[currentLanguage].login }}
              </button>
              <button @click="openRegisterModal" class="bg-green-600 hover:bg-green-700 text-white px-6 py-2 rounded-lg text-sm font-medium">
                {{ translations[currentLanguage].register }}
              </button>
            </div>
          </div>
        </div>
      </div>
    </nav>
  </header>

  <!-- Modal de Login -->
  <div v-if="isLoginModalOpen" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" @click="closeLoginModal">
    <div class="bg-white rounded-lg p-8 max-w-md w-full mx-4" @click.stop>
      <div class="flex justify-between items-center mb-6">
        <h2 class="text-2xl font-bold text-gray-900">{{ translations[currentLanguage].login }}</h2>
        <button @click="closeLoginModal" class="text-gray-500 hover:text-gray-700">
          <Icon name="mdi:close" class="w-6 h-6" />
        </button>
      </div>
      
      <form @submit.prevent="handleLogin">
        <div class="mb-4">
          <label for="email" class="block text-sm font-medium text-gray-700 mb-2">
            {{ translations[currentLanguage].email }}
          </label>
          <input
            type="email"
            id="email"
            v-model="loginForm.email"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
            :placeholder="translations[currentLanguage].emailPlaceholder"
          />
        </div>
        
        <div class="mb-6">
          <label for="password" class="block text-sm font-medium text-gray-700 mb-2">
            {{ translations[currentLanguage].password }}
          </label>
          <input
            type="password"
            id="password"
            v-model="loginForm.password"
            required
            class="w-full px-3 py-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-green-500 focus:border-green-500"
            :placeholder="translations[currentLanguage].passwordPlaceholder"
          />
        </div>
        
        <div class="flex items-center justify-between mb-6">
          <label class="flex items-center">
            <input type="checkbox" v-model="loginForm.remember" class="rounded border-gray-300 text-green-600 focus:ring-green-500">
            <span class="ml-2 text-sm text-gray-600">{{ translations[currentLanguage].rememberMe }}</span>
          </label>
          <a href="#" class="text-sm text-green-600 hover:text-green-700">{{ translations[currentLanguage].forgotPassword }}</a>
        </div>
        
        <button
          type="submit"
          class="w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-4 rounded-lg transition-colors"
        >
          {{ translations[currentLanguage].login }}
        </button>
        
        <div class="mt-4 text-center">
          <span class="text-sm text-gray-600">{{ translations[currentLanguage].noAccount }}</span>
          <a href="#" @click="closeLoginModal(); openRegisterModal()" class="text-sm text-green-600 hover:text-green-700 ml-1">{{ translations[currentLanguage].signUpHere }}</a>
        </div>
      </form>
    </div>
  </div>
  
  <!-- Modal de Cadastro -->
  <div v-if="isRegisterModalOpen" class="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50" @click="closeRegisterModal">
    <div class="bg-white rounded-lg shadow-xl p-6 w-full max-w-md mx-4" @click.stop>
      <div class="flex justify-between items-center mb-6">
        <h2 class="text-2xl font-bold text-gray-800">{{ translations[currentLanguage].register }}</h2>
        <button @click="closeRegisterModal" class="text-gray-500 hover:text-gray-700">
          <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <form @submit.prevent="handleRegister" class="space-y-4">
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">{{ translations[currentLanguage].name }}</label>
          <input
            type="text"
            v-model="registerForm.name"
            :placeholder="translations[currentLanguage].namePlaceholder"
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
            required
          />
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">{{ translations[currentLanguage].birthDate }}</label>
          <input
            type="date"
            v-model="registerForm.birthDate"
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
            required
          />
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">{{ translations[currentLanguage].email }}</label>
          <input
            type="email"
            v-model="registerForm.email"
            :placeholder="translations[currentLanguage].emailPlaceholder"
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
            required
          />
        </div>
        
        <div>
          <label class="block text-sm font-medium text-gray-700 mb-2">{{ translations[currentLanguage].password }}</label>
          <input
            type="password"
            v-model="registerForm.password"
            :placeholder="translations[currentLanguage].passwordPlaceholder"
            class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500 focus:border-transparent"
            required
          />
        </div>
        
        <button
          type="submit"
          class="w-full bg-green-600 hover:bg-green-700 text-white font-semibold py-3 px-4 rounded-lg transition-colors"
        >
          {{ translations[currentLanguage].register }}
        </button>
        
        <div class="mt-4 text-center">
          <span class="text-sm text-gray-600">{{ translations[currentLanguage].alreadyHaveAccount }}</span>
          <a href="#" @click="closeRegisterModal(); openLoginModal()" class="text-sm text-green-600 hover:text-green-700 ml-1">{{ translations[currentLanguage].loginHere }}</a>
        </div>
      </form>
    </div>
  </div>
</template>

<script setup>
import { useTranslations } from '~/composables/useTranslations'

const { currentLanguage, changeLanguage: changeGlobalLanguage, t, loadSavedLanguage } = useTranslations()

const isMobileMenuOpen = ref(false)
const isLoginModalOpen = ref(false)
const isRegisterModalOpen = ref(false)
const loginForm = ref({
  email: '',
  password: '',
  remember: false
})
const registerForm = ref({
  name: '',
  birthDate: '',
  email: '',
  password: ''
})

const translations = {
  pt: {
    language: 'Idioma',
    home: 'In√≠cio',
    about: 'Sobre N√≥s',
    plans: 'Planos',
    guide: 'Guia do Brasil',
    faq: 'FAQ',
    contact: 'Contato',
    chatbot: 'Chatbot',
    login: 'Entrar',
    register: 'Cadastrar',
    email: 'E-mail',
    password: 'Senha',
    name: 'Nome',
    birthDate: 'Data de Nascimento',
    emailPlaceholder: 'Digite seu e-mail',
    passwordPlaceholder: 'Digite sua senha',
    namePlaceholder: 'Digite seu nome completo',
    birthDatePlaceholder: 'DD/MM/AAAA',
    rememberMe: 'Lembrar de mim',
    forgotPassword: 'Esqueceu a senha?',
    noAccount: 'N√£o tem conta?',
    signUpHere: 'Cadastre-se aqui',
    alreadyHaveAccount: 'J√° tem conta?',
    loginHere: 'Entre aqui'
  },
  en: {
    language: 'Language',
    home: 'Home',
    about: 'About Us',
    plans: 'Plans',
    guide: 'Brazil Guide',
    faq: 'FAQ',
    contact: 'Contact',
    chatbot: 'Chatbot',
    login: 'Login',
    register: 'Sign Up',
    email: 'Email',
    password: 'Password',
    name: 'Name',
    birthDate: 'Birth Date',
    emailPlaceholder: 'Enter your email',
    passwordPlaceholder: 'Enter your password',
    namePlaceholder: 'Enter your full name',
    birthDatePlaceholder: 'MM/DD/YYYY',
    rememberMe: 'Remember me',
    forgotPassword: 'Forgot password?',
    noAccount: "Don't have an account?",
    signUpHere: 'Sign up here',
    alreadyHaveAccount: 'Already have an account?',
    loginHere: 'Login here'
  },
  es: {
    language: 'Idioma',
    home: 'Inicio',
    about: 'Sobre',
    plans: 'Planes',
    guide: 'Gu√≠a',
    faq: 'FAQ',
    contact: 'Contacto',
    chatbot: 'Chatbot',
    login: 'Iniciar Sesi√≥n',
    register: 'Registrarse',
    email: 'Correo',
    password: 'Contrase√±a',
    name: 'Nombre',
    birthDate: 'Fecha de Nacimiento',
    emailPlaceholder: 'Ingrese su correo',
    passwordPlaceholder: 'Ingrese su contrase√±a',
    namePlaceholder: 'Ingrese su nombre completo',
    birthDatePlaceholder: 'DD/MM/AAAA',
    rememberMe: 'Recordarme',
    forgotPassword: '¬øOlvid√≥ la contrase√±a?',
    noAccount: '¬øNo tiene cuenta?',
    signUpHere: 'Reg√≠strese aqu√≠',
    alreadyHaveAccount: '¬øYa tiene cuenta?',
    loginHere: 'Inicie sesi√≥n aqu√≠'
  }
}

const changeLanguage = (event) => {
  currentLanguage.value = event.target.value
  // Salvar no localStorage para persistir a escolha
  if (process.client) {
    localStorage.setItem('language', currentLanguage.value)
  }
}

const toggleMobileMenu = () => {
  isMobileMenuOpen.value = !isMobileMenuOpen.value
}

const openLoginModal = () => {
  isLoginModalOpen.value = true
}

const closeLoginModal = () => {
  isLoginModalOpen.value = false
  // Limpar formul√°rio ao fechar
  loginForm.value = {
    email: '',
    password: '',
    remember: false
  }
}

const handleLogin = () => {
  // Aqui voc√™ pode implementar a l√≥gica de login
  console.log('Login attempt:', loginForm.value)
  // Por enquanto, apenas fecha o modal
  alert('Login realizado com sucesso!')
  closeLoginModal()
}

const openRegisterModal = () => {
  isRegisterModalOpen.value = true
}

const closeRegisterModal = () => {
  isRegisterModalOpen.value = false
  // Limpar formul√°rio ao fechar
  registerForm.value = {
    name: '',
    birthDate: '',
    email: '',
    password: ''
  }
}

const handleRegister = () => {
  // Aqui voc√™ pode implementar a l√≥gica de cadastro
  console.log('Register attempt:', registerForm.value)
  // Por enquanto, apenas fecha o modal
  alert('Cadastro realizado com sucesso!')
  closeRegisterModal()
}

// Carregar idioma salvo no localStorage
onMounted(() => {
  if (process.client) {
    const savedLanguage = localStorage.getItem('language')
    if (savedLanguage) {
      currentLanguage.value = savedLanguage
    }
  }
})
</script>

<style>
@import url('https://fonts.googleapis.com/css2?family=Anton&display=swap');
</style>